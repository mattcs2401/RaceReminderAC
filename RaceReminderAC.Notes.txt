|------------------|
|  RaceReminderAC  |
|------------------|

** Project notes/comments/etc in no particular order. **

----------
Decisions:
----------
1. Made choice to stop using Volley and go with the framework's DownloadManager.
   The main reason for this is that:
   -> Volley holds everything in memory and some of the tatts.com pages can be large (comparatively)
      approx 16K depending when tatts.com updates the pages. This had a flow on affect with
      WorkManager.Worker objects where the input data had an approx 10K limit.
   -> DownloadManager writes to storage and details can be read from there. This has the advantage
      that the details associated with all of the initial pages that are downloaded when RaceDetails
      are created, are available at any time (if files are retained), and any retained files can be
      deleted at some time later. WorkManager.Worker objects now just carry the file id given by the
      DownloadManager.

-------
Issues:
-------
>> Multiple swipe to deletes:
   Quickly swiping to delete multiple entries causes display issue when SnackBar based UNDO
   function is enabled.

   Note: If wait till after SnackBar, then all OK.
         Likely a timing issue as deletes are done on a background thread.

>> If have say two records:
   - Swipe delete the 2nd record, and
   - before the SnackBar disappears, edit the 1st record and update, then
   - 2nd record re-appears.

   Note: If don't update, just press back, then all OK.
         Likely a timing issue as edits are done on a background thread (similar point 1 above).

------
TO DO:
------
-> If race time is in the past:
   -> Don't send reminder notifications.
   -> Don't refresh the race (UI colour).

-> Consider a network connection for:
   "https://tatts.com/pagedata/racing" and associated pages, e.g.;
    - https://tatts.com/pagedata/racing/2019/M(M)/D(D)/NR1.xml
    or
    - https://tatts.com/pagedata/racing/2019/M(M)/D(D)/RaceDay.xml

-> 1) Preference controls use of the network connection (WiFi or Mobile data (or both ?)).
   2) If preference enabled:
      2.1) When a new Race is entered, use Volley to get the xml data from tatts.com
           -> use today's date, meeting code and race number.
      2.2) When Volley returns, use a background worker to parse the xml.

      What do we do with the parsed xml ?
      - have in memory pojos, or write to database table/s ?
      - what information are we really interested in ?

-> Make the number picker values bigger.
   - Add/Edit screen design ?

-> Consider using the Anko library
   https://github.com/Kotlin/anko/wiki

->  XX minutes after race time, record auto removes from view ?
    - Preferences controlled ?
    - What if the race is late starting ?
    - What about a screen that shows those removed ?

